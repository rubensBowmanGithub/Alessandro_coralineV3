<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 StreamSets Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.streamsets</groupId>
    <artifactId>streamsets-datacollector-root</artifactId>
    <version>3.22.2</version>
    <relativePath>../root</relativePath>
  </parent>
  <groupId>com.streamsets</groupId>
  <artifactId>streamsets-datacollector-release</artifactId>
  <version>3.22.2</version>
  <description>StreamSets Data Collector Release TARs</description>
  <name>StreamSets Data Collector Release TARs</name>
  <packaging>jar</packaging>

  <properties>
    <edge.release-dir>target/SDCe</edge.release-dir>
    <datacollector-edge.version>3.22.0</datacollector-edge.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.streamsets</groupId>
      <artifactId>coraline-dataharvester-dist</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependency</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <!--                was detected as version 3.22.00 but on the maven repository is available only version: 3.16.0-->
                <artifactItem>
                  <groupId>com.streamsets</groupId>
                  <artifactId>streamsets-datacollector-edge</artifactId>
                  <classifier>linux-arm</classifier>
<!--                  <version>${datacollector-edge.version}</version>-->
                  <version>3.16.0</version>
                  <type>tgz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${edge.release-dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.streamsets</groupId>
                  <artifactId>streamsets-datacollector-edge</artifactId>
                  <classifier>linux-amd64</classifier>
<!--                  <version>${datacollector-edge.version}</version>-->
                  <version>3.16.0</version>
                  <type>tgz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${edge.release-dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.streamsets</groupId>
                  <artifactId>streamsets-datacollector-edge</artifactId>
                  <classifier>darwin-amd64</classifier>
<!--                  <version>${datacollector-edge.version}</version>-->
                  <version>3.16.0</version>
                  <type>tgz</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${edge.release-dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>com.streamsets</groupId>
                  <artifactId>streamsets-datacollector-edge</artifactId>
                  <classifier>windows-amd64</classifier>
<!--                  <version>${datacollector-edge.version}</version>-->
                  <version>3.16.0</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${edge.release-dir}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>sdc-all</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>false</attach>
              <tarLongFileMode>gnu</tarLongFileMode>
              <finalName>coraline-dataharvester-all-${project.version}</finalName>
              <descriptors>
                <descriptor>src/main/assemblies/data-collector-sdc-all.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>sdc-core</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>false</attach>
              <tarLongFileMode>gnu</tarLongFileMode>
              <finalName>coraline-dataharvester-core-${project.version}</finalName>
              <descriptors>
                <descriptor>src/main/assemblies/data-collector-sdc-core.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>sdc-common</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>false</attach>
              <tarLongFileMode>gnu</tarLongFileMode>
              <finalName>coraline-dataharvester-common-${project.version}</finalName>
              <descriptors>
                <descriptor>src/main/assemblies/data-collector-sdc-common.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>stage-lib-tars</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <exec executable="/bin/bash" dir="${basedir}" failonerror="true">
                  <arg line="src/main/bin/create-lib-tars.sh ${project.version} ${basedir}/../dist/target/coraline-dataharvester-${project.version} ${project.build.directory}"/>
                </exec>
                <exec executable="/bin/bash" dir="${basedir}" failonerror="true">
                  <arg line="src/main/bin/create-legacy-tars.sh ${project.version} ${basedir}/../dist/target/coraline-dataharvester-${project.version}-legacy ${project.build.directory}/legacy/"/>
                </exec>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>release-tar</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo file="${project.build.directory}/finalizetarballs.sh">#!/bin/bash
                  run() {
                    echo "\$ ${@}"
                    "${@}"
                    res=$?
                    if [ $res != 0 ]; then
                      echo
                      echo "Failed!"
                      echo
                      exit $res
                    fi
                  }

                  targetDir=`pwd`
                  run mv coraline-dataharvester-all-${project.version}.tar.gz coraline-dataharvester-all-${project.version}.tgz
                  sha1sum coraline-dataharvester-all-${project.version}.tgz > coraline-dataharvester-all-${project.version}.tgz.sha1
                  run gzip coraline-dataharvester-core-${project.version}.tar
                  run mv coraline-dataharvester-core-${project.version}.tar.gz coraline-dataharvester-core-${project.version}.tgz
                  sha1sum coraline-dataharvester-core-${project.version}.tgz > coraline-dataharvester-core-${project.version}.tgz.sha1
                  run gzip coraline-dataharvester-common-${project.version}.tar
                  run mv coraline-dataharvester-common-${project.version}.tar.gz coraline-dataharvester-common-${project.version}.tgz
                  sha1sum coraline-dataharvester-common-${project.version}.tgz > coraline-dataharvester-common-${project.version}.tgz.sha1
                  echo
                  echo "StreamSets Data Collector tars available at:  ${targetDir}/"
                  echo
                </echo>
                <exec executable="/bin/bash" dir="${project.build.directory}" failonerror="true">
                  <arg line="./finalizetarballs.sh"/>
                </exec>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
